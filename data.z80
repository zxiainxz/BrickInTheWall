; Sprites

; File - ../../breakthru/sprites/ball-8x8.gif
; Mask file - ../../breakthru/sprites/ball-mask-8x8.gif
; Order - column
; Shifted - Horizontal: True | Vertical: True
ball8x8Data: dw ball8x8Data0, ball8x8Data1, ball8x8Data2, ball8x8Data3, ball8x8Data4, ball8x8Data5, ball8x8Data6, ball8x8Data7
ball8x8Data0: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 231, 24, 129, 102, 129, 82, 0, 161, 0, 129, 129, 66, 129, 102, 231, 24, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0
ball8x8Data1: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 243, 12, 192, 51, 192, 41, 128, 80, 128, 64, 192, 33, 192, 51, 243, 12, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 127, 128, 127, 128, 255, 0, 255, 0, 255, 0
ball8x8Data2: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 249, 6, 224, 25, 224, 20, 192, 40, 192, 32, 224, 16, 224, 25, 249, 6, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 127, 128, 127, 128, 63, 64, 63, 64, 127, 128, 127, 128, 255, 0
ball8x8Data3: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 252, 3, 240, 12, 240, 10, 224, 20, 224, 16, 240, 8, 240, 12, 252, 3, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 63, 192, 63, 64, 31, 32, 31, 32, 63, 64, 63, 192, 255, 0
ball8x8Data4: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 254, 1, 248, 6, 248, 5, 240, 10, 240, 8, 248, 4, 248, 6, 254, 1, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 127, 128, 31, 96, 31, 32, 15, 16, 15, 16, 31, 32, 31, 96, 127, 128
ball8x8Data5: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 252, 3, 252, 2, 248, 5, 248, 4, 252, 2, 252, 3, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 63, 192, 15, 48, 15, 144, 7, 8, 7, 8, 15, 16, 15, 48, 63, 192
ball8x8Data6: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 254, 1, 254, 1, 252, 2, 252, 2, 254, 1, 254, 1, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 159, 96, 7, 152, 7, 72, 3, 132, 3, 4, 7, 8, 7, 152, 159, 96
ball8x8Data7: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 254, 1, 254, 1, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 207, 48, 3, 204, 3, 164, 1, 66, 1, 2, 3, 132, 3, 204, 207, 48
ball8x8Padding: db 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0

; File - ../../breakthru/sprites/bat-16x8.gif
; Mask file - ../../breakthru/sprites/bat-mask-16x8.gif
; Order - column
; Shifted - Horizontal: True | Vertical: False
bat16x8Data:  dw bat16x8Data0, bat16x8Data1, bat16x8Data2, bat16x8Data3, bat16x8Data4, bat16x8Data5, bat16x8Data6, bat16x8Data7
bat16x8Data0: db 192, 63, 128, 68, 0, 155, 0, 183, 0, 168, 0, 137, 128, 72, 192, 63, 3, 252, 1, 34, 0, 217, 0, 237, 0, 21, 0, 145, 1, 18, 3, 252, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0
bat16x8Data1: db 224, 31, 192, 34, 128, 77, 128, 91, 128, 84, 128, 68, 192, 36, 224, 31, 1, 254, 0, 17, 0, 236, 0, 246, 0, 10, 0, 200, 0, 9, 1, 254, 255, 0, 255, 0, 127, 128, 127, 128, 127, 128, 127, 128, 255, 0, 255, 0
bat16x8Data2: db 240, 15, 224, 17, 192, 38, 192, 45, 192, 42, 192, 34, 224, 18, 240, 15, 0, 255, 0, 8, 0, 246, 0, 251, 0, 5, 0, 100, 0, 4, 0, 255, 255, 0, 127, 128, 63, 64, 63, 64, 63, 64, 63, 64, 127, 128, 255, 0
bat16x8Data3: db 248, 7, 240, 8, 224, 19, 224, 22, 224, 21, 224, 17, 240, 9, 248, 7, 0, 255, 0, 132, 0, 123, 0, 253, 0, 2, 0, 50, 0, 2, 0, 255, 127, 128, 63, 64, 31, 32, 31, 160, 31, 160, 31, 32, 63, 64, 127, 128
bat16x8Data4: db 252, 3, 248, 4, 240, 9, 240, 11, 240, 10, 240, 8, 248, 4, 252, 3, 0, 255, 0, 66, 0, 189, 0, 126, 0, 129, 0, 153, 0, 129, 0, 255, 63, 192, 31, 32, 15, 144, 15, 208, 15, 80, 15, 16, 31, 32, 63, 192
bat16x8Data5: db 254, 1, 252, 2, 248, 4, 248, 5, 248, 5, 248, 4, 252, 2, 254, 1, 0, 255, 0, 33, 0, 222, 0, 191, 0, 64, 0, 76, 0, 64, 0, 255, 31, 224, 15, 16, 7, 200, 7, 104, 7, 168, 7, 136, 15, 144, 31, 224
bat16x8Data6: db 255, 0, 254, 1, 252, 2, 252, 2, 252, 2, 252, 2, 254, 1, 255, 0, 0, 255, 0, 16, 0, 111, 0, 223, 0, 160, 0, 38, 0, 32, 0, 255, 15, 240, 7, 136, 3, 100, 3, 180, 3, 84, 3, 68, 7, 72, 15, 240
bat16x8Data7: db 255, 0, 255, 0, 254, 1, 254, 1, 254, 1, 254, 1, 255, 0, 255, 0, 128, 127, 0, 136, 0, 55, 0, 111, 0, 80, 0, 19, 0, 144, 128, 127, 7, 248, 3, 68, 1, 178, 1, 218, 1, 42, 1, 34, 3, 36, 7, 248

; Bricks

; left = 8
; right = 4
; top = 2
; bottom = 1

brickTable: dw brickoutlineDataBlank, brickoutlineDataBottom, brickoutlineDataTop, brickoutlineDataTopBottom, brickoutlineDataRight, brickoutlineDataBottomRight, brickoutlineDataTopRight, brickoutlineDataTopBottomRight, brickoutlineDataLeft, brickoutlineDataBottomLeft, brickoutlineDataTopLeft, brickoutlineDataTopBottomLeft, brickoutlineDataLeftRight, brickoutlineDataBottomLeftRight, brickoutlineDataTopLeftRight, brickoutlineDataTopBottomLeftRight

brickData: db 255, 254, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 0, 0

brickoutlineDataBlank: db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

brickoutlineDataTop:   db 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ; 2
brickoutlineDataBottom: db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255 ; 1
brickoutlineDataLeft:   db 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128 ; 8
brickoutlineDataRight:  db 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ; 4

brickoutlineDataTopBottom: db 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255; 3
brickoutlineDataTopLeft: db 255, 255, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0 ; 10
brickoutlineDataTopRight: db 255, 255, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ; 6

brickoutlineDataBottomLeft: db 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 255, 255 ; 9
brickoutlineDataBottomRight: db 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 255, 255 ; 5

brickoutlineDataTopBottomLeft: db 255, 255, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 255, 255 ; 11
brickoutlineDataTopBottomRight: db 255, 255, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 255, 255; 7

brickoutlineDataLeftRight: db 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1 ; 12
brickoutlineDataTopLeftRight: db 255, 255, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1 ; 14
brickoutlineDataBottomLeftRight: db 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 255, 255 ; 13
brickoutlineDataTopBottomLeftRight: db 255, 255, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 255, 255 ; 15

bg116x16Data0: db 128, 1, 96, 6, 28, 56, 3, 192, 32, 4, 64, 2, 1, 128, 2, 64, 2, 64, 1, 128, 64, 2, 32, 4, 3, 192, 28, 56, 96, 6, 128, 1
bg216x16Data0: db 255, 254, 128, 0, 160, 2, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 0, 160, 2, 0, 0
bg316x16Data0: db 32, 4, 32, 4, 192, 3, 1, 128, 2, 64, 2, 64, 12, 48, 17, 136, 17, 136, 12, 48, 2, 64, 2, 64, 1, 128, 192, 3, 32, 4, 32, 4

bordertData0: db 255, 36, 153, 66, 66, 153, 36, 255

; File - ../../brick-in-the-wall/art/logo.gif
; Order - row
; Shifted - Horizontal: False | Vertical: False
; Size - 10 x 8
logoData0: db 3, 248, 7, 252, 3, 0, 31, 0, 192, 192, 4, 4, 8, 2, 4, 128, 96, 129, 33, 32, 8, 2, 16, 1, 8, 64, 128, 66, 18, 16, 8, 2, 16, 1, 8, 65
           db 0, 66, 18, 16, 8, 2, 16, 1, 8, 65, 0, 130, 20, 32, 8, 4, 16, 2, 8, 66, 15, 2, 8, 64, 8, 8, 16, 12, 8, 66, 16, 2, 0, 128, 8, 8, 16, 16
           db 8, 66, 16, 2, 0, 128, 8, 4, 16, 12, 8, 66, 15, 2, 8, 64, 8, 2, 16, 66, 8, 65, 0, 130, 20, 32, 8, 2, 16, 161, 8, 65, 0, 66, 18, 16, 8
           db 2, 16, 161, 8, 64, 128, 66, 18, 16, 4, 4, 9, 18, 4, 128, 96, 129, 33, 32, 3, 248, 6, 12, 3, 0, 31, 0, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0
           db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
           db 0, 0, 0, 0, 0, 0, 0, 1, 129, 255, 128, 127, 248, 24, 24, 31, 128, 2, 66, 0, 64, 128, 4, 36, 36, 32, 64, 4, 36, 0, 33, 0, 2, 66, 66, 64
           db 32, 4, 36, 0, 33, 0, 2, 66, 66, 64, 192, 4, 36, 24, 32, 128, 4, 65, 130, 65, 0, 4, 36, 36, 32, 112, 56, 64, 2, 64, 128, 4, 36, 36, 32
           db 8, 64, 65, 130, 65, 0, 4, 36, 36, 32, 8, 64, 66, 66, 64, 192, 4, 36, 36, 32, 8, 64, 66, 66, 64, 32, 2, 66, 66, 64, 4, 128, 36, 36, 32
           db 64, 1, 129, 129, 128, 3, 0, 24, 24, 31, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
           db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 128, 6, 1, 255, 128, 96, 0, 48, 0, 2, 64
           db 9, 2, 0, 64, 144, 0, 72, 0, 4, 32, 16, 132, 0, 33, 8, 0, 132, 0, 4, 32, 16, 132, 0, 33, 8, 0, 132, 0, 4, 32, 16, 132, 0, 33, 8, 0, 132
           db 0, 4, 32, 16, 132, 0, 33, 8, 0, 132, 0, 4, 35, 16, 132, 0, 33, 8, 0, 132, 0, 4, 20, 160, 132, 0, 33, 4, 0, 130, 0, 4, 8, 64, 132, 0, 33
           db 3, 192, 129, 224, 4, 0, 0, 132, 24, 33, 0, 32, 128, 16, 4, 0, 0, 132, 36, 33, 0, 16, 128, 8, 4, 3, 0, 132, 36, 33, 0, 16, 128, 8, 2, 4
           db 129, 2, 66, 64, 128, 32, 64, 16, 1, 248, 126, 1, 129, 128, 127, 192, 63, 224

LevelBlockCount:        db 0

; variables
secondcounter:          db 0                    ; resets to 0 every second
introscenecolour:       db 2

yballdir:               db 0
xballdir:               db 0

oldbally:               db 0
oldballx:               db 0
proposedbally:          db 0
proposedballx:          db 0

batvelocitydelta:       dw 0
batvelocitytarget:      db 0
batvelocity:            dw 0

lives:                  db INITIAL_LIVES

currentlevel:           db 0
currentbg:              dw 0
currentbgattr:          db 56

inputhandler:           dw HandleKeys                  ; the address of the input handler routine

; level data
; number blocks, name, data = 5 bytes
LEVELDATA_SIZE          EQU 5
LEVELDATA_COUNT         EQU 0
LEVELDATA_NAME          EQU 1
LEVELDATA_DATA          EQU 3

; sprite table, enough space for 2 sprites on screen
; Flags: bit 1 - active
;        bit 2 - size (0 - 8x8, 1 - 16x8)
; SPRITETABLE_FLAGS       EQU 0
SPRITETABLE_Y           EQU 0                       ; 8bit y
SPRITETABLE_X           EQU 1                       ; 8bit x
SPRITETABLE_PRESHIFT    EQU 2                       ; data table
SPRITETABLE_DATA        EQU 4                       ; current sprite shifted data
SPRITETABLE_SCADD       EQU 6                       ; where the new sprite will be drawn
; SPRITETABLE_OLD_DATA    EQU 11                      ; old sprite shifted data
; SPRITETABLE_OLD_X       EQU 13                      ; old 8bit x - should change to shift offset
SPRITETABLE_Y16         EQU 8                      ; 16bit y - high byte is pixel coord, low is fractional
SPRITETABLE_X16         EQU 10                      ; 16bit x
SPRITETABLE_SIZE        EQU 12

spritetable:            block SPRITETABLE_SIZE * MAX_SPRITES

currentloop:            db 0
mainloops:              dw StartScreenLoop, MainGameLoop, GameOverLoop, IntroLoop, LevelCompleteLoop
initialisers:           dw StartScreenInitialise, GameLoopInitialise, GameOverInitialise, IntroInitialise, LevelCompleteInitialise

bonusadder              db 0
score:                  byte "000000\0"

breakthru_string:       byte "BRICK IN THE WALL\0"
anykey_string:          byte "PRESS FIRE TO START\0"
score_string:           byte "SCORE\0"
lives_string:           byte "LIVES\0"
gameover_string:        byte "GAME OVER\0"
level_string            byte "LEVEL \0\0\0"
level_complete_string:  byte "LEVEL CLEAR\0"

                        org 0xa000
ScreenBuffer:           block 32 * 24 * 8, 0

previous_row:           block 16, 0
LevelMap:               block 256

DRAWCELL_SIZE           EQU 12
DRAWCELL_ATTRADDR       EQU 0
DRAWCELL_ATTR           EQU 2
DRAWCELL_SCRHIGH        EQU 3
DRAWCELL_DATA           EQU 4

; Enough space for 200 cells
DrawCellCount:          db 0
DrawCellList:           block DRAWCELL_SIZE * MAX_CELLS, 0          ; contains drawcell data
DrawCellListNext:       dw DrawCellList
UsedCellList:           block MAX_CELLS * 2, 0                      ; contains a pointer to the cell in UsedCellList
UsedCellListNext:       dw UsedCellList

                        org 0xd000
UsedCellMap:            block 32 * 24, 255

CLEARCELL_SIZE          EQU 4
CLEARCELL_ATTRADDR      EQU 0
CLEARCELL_PADDING       EQU 2
CLEARCELL_SCRHIGH       EQU 3

ClearCellCount:         db 0
ClearCellList:          block MAX_CELLS * CLEARCELL_SIZE, 0
                        include "anarchist-font.z80"